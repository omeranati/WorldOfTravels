@model IEnumerable<WorldOfTravels.Models.Post>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "RecommendedDestinations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Recommended Destinations</h2>

<div class="row">
    <div class="col-lg-8">
        @foreach (var item in Model)
        {
            <section>
                <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                <i class="glyphicon glyphicon-user"></i> <strong>@Html.DisplayFor(modelItem => item.UploaderUsername)</strong>
                <hr>
                <p>
                    <span class="glyphicon glyphicon-globe"></span> <strong>@Html.DisplayFor(modelItem => item.Country.Name)</strong>
                </p>
                <p class="small">
                    <span class="glyphicon glyphicon-calendar"></span> Posted on @Html.DisplayFor(modelItem => item.PublishDate)
                </p>
                <p>
                    @Html.DisplayFor(modelItem => item.Content)
                </p>
                <p>
                    @if (item.UploaderUsername != null && item.UploaderUsername.Equals(UserManager.GetUserName(User)))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    }
                </p>
            </section>
            @if (SignInManager.IsSignedIn(User))
            {
                var user = await UserManager.GetUserAsync(User);

                if (user != null)
                {
                    <div class="row" style="margin: 0px;">
                        <div class="well well-sm col-md-6">
                            <p><i class="glyphicon glyphicon-send"></i> Leave a Comment:</p>
                            @using (Html.BeginForm("PostComment", "Posts"))
                            {
                                <input type="hidden" name="postId" value="@item.ID" />
                                <div class="form-group">
                                    <textarea name="content" class="form-control" rows="2"></textarea>
                                </div>
                                <button type="submit" value="post" class="btn btn-info">Submit</button>
                            }
                        </div>
                    </div>
                }
            }
            @foreach (var comment in item.Comments)
            {
                <section>
                    <p>
                        <span class="glyphicon glyphicon-comment"></span>
                        @Html.DisplayFor(modelItem => comment.UploaderUsername):
                        <br />
                        <small>@Html.DisplayFor(modelItem => comment.CreationDate)</small>
                    </p>
                    <p>@Html.DisplayFor(modelItem => comment.Content)</p>

                    @if (comment.UploaderUsername != null && comment.UploaderUsername.Equals(UserManager.GetUserName(User)))
                    {
                        @using (Html.BeginForm("DeleteComment", "Posts"))
                        {
                            <input type="hidden" name="id" value="@comment.ID" />
                            <button type="submit" class="btn btn-light btn-sm"><span class="glyphicon glyphicon-trash"></span></button>
                        }
                    }
                </section>
            }

            <br />
        }
    </div>
</div>

<script>
    window.onload = function () {
        $("#countriesList").prop("selectedIndex", -1);
    };
</script>