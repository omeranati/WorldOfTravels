@model IEnumerable<WorldOfTravels.Models.Country>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
}

<h2>Our Countries</h2>

<div class="row">
    <div id='myMap' class="col-md-6 center-tag" style='width: 800px; height: 350px;'></div>
</div>

<hr /> <br />

<form asp-controller="Countries" asp-action="Index" method="get" class="row">
    <div class="col-md-3">
        <input type="text" class="form-control" placeholder="Name" name="NameSearch">
    </div>

    <div class="col-md-3">
        <select asp-items="Html.GetEnumSelectList<Continent>()" class="form-control" name="ContinentSearch">
            <option selected="selected" value="All">Select Continent</option>
        </select>
    </div>

    <div class="col-md-3">
        <select placeholder="Is Tropical" class="form-control dropdown" name="TropicalSearch">
            <option value="All">All Countries</option>
            <option value="Yes">Tropical Countries</option>
            <option value="No">NO tropical Countries</option>
        </select>
    </div>
    <input type="submit" value="Filter" class="btn btn-info" />
</form>

<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Continent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsTropical)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Continent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsTropical)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);

                        if (user != null && user.IsAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);

    if (user != null && user.IsAdmin)
    {
        <div>
            <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Create")'">
                <span class="glyphicon glyphicon-pencil"></span> Add New Country
            </button>
        </div>
    }
}
@section Scripts {

<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=Ao7Xe17AnUYUK8HAlSP-2NScahkmdQyFxpgc6e6KqW350MqLhi--frvTRtJZ8lif&callback=loadMapScenario' async defer></script>

<script type='text/javascript'>

    function loadMapScenario() {
        // Create map
        var map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
            zoom: 1
        });

        // Serialize Model data
        var mapsData = @Html.Raw(Json.Serialize(Model));

        // Usea SearchManager to find the countries location by their name
        Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
            var searchManager = new Microsoft.Maps.Search.SearchManager(map);

            // Iterate through the countries list and make pins on map with JQuery "each" selector
            $.each(mapsData, function (i, item) {
                var requestOptions = {
                    bounds: map.getBounds(),
                    where: item.name,
                    callback: function (answer, userData) {
                        var pushpin = new Microsoft.Maps.Pushpin(answer.results[0].location, {
                            icon: "images/map pin.png",
                            title: item.name,
                        });

                        map.entities.push(pushpin);
                    }
                };
                searchManager.geocode(requestOptions);
            });
        });
    }
</script>
}