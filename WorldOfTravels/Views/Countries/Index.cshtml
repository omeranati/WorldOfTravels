@model IEnumerable<WorldOfTravels.Models.Country>

@{
    ViewData["Title"] = "Index";
}

<h2>Our Countries</h2>

<div class="row">
    <div id='myMap' class="col-md-6 center-tag" style='width: 800px; height: 350px;'></div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Create")'">
        <span class="glyphicon glyphicon-pencil"></span> Add New Country
    </button>
</div>

@section Scripts {

    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=Ao7Xe17AnUYUK8HAlSP-2NScahkmdQyFxpgc6e6KqW350MqLhi--frvTRtJZ8lif&callback=loadMapScenario' async defer></script>
    
    <script type='text/javascript'>
            
        function loadMapScenario() {
            // Create map
            var map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
                zoom: 1
            });

            // Serialize Model data    
            var mapsData = @Html.Raw(Json.Serialize(Model));

            // Usea SearchManager to find the countries location by their name
            Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
                var searchManager = new Microsoft.Maps.Search.SearchManager(map);

                // Iterate through the countries list and make pins on map with JQuery "each" selector
                $.each(mapsData, function (i, item) {
                    var requestOptions = {
                        bounds: map.getBounds(),
                        where: item.name,
                        callback: function (answer, userData) {
                            var pushpin = new Microsoft.Maps.Pushpin(answer.results[0].location, {
                                //icon: 'https://www.bingmapsportal.com/Content/images/poi_custom.png',
                                icon: "images/map pin.png",
                                title: item.name,
                            });

                            map.entities.push(pushpin);
                        }
                    };
                    searchManager.geocode(requestOptions);
                });
            });
        }
    </script>
}